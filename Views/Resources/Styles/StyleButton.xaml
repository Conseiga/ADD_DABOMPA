<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Button Icons  -->
    <BitmapImage x:Key="HomeIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn_home_50.png" />
    <BitmapImage x:Key="MenuIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn_menu_60.png" />
    <BitmapImage x:Key="MemberIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn_member_64.png" />
    <BitmapImage x:Key="DepartementIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn_departement_64.png" />
    <BitmapImage x:Key="FluxIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn_flux_monetaire_64.png" />
    <BitmapImage x:Key="LogoutIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn-logout-100.png" />
    <BitmapImage x:Key="SettingIcon" UriSource="/ADD_DABOMPA;component/Views/Resources/Images/Icons/btn-paramettre-100.png" />



    <!--  Default style for a button  -->
    <Style x:Key="stl_DefaultButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="6,7,6,7" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource stl_DefaultForeground_2Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Padding="9,0,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <StackPanel Orientation="Horizontal">
                            <!--  Icon Part  -->
                            <Image
                                x:Name="iconPresenter"
                                Width="20"
                                Height="20"
                                Margin="0,0,15,0"
                                Source="{TemplateBinding Tag}"
                                Stretch="Uniform" />
                            <!--  Text Part  -->
                            <ContentPresenter
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextElement.FontWeight="Bold"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Mouse Over Effect  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource stl_MenuButtonHoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource stl_DefaultForeground_2Brush}" />
            </Trigger>

            <!--  Pressed Effect  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DodgerBlue" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  Default style for a button  -->
    <Style x:Key="stl_DefaultButton_2" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource stl_DefaultForeground_2Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        HorizontalAlignment="Center"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="17">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <!--  Icon Part  -->
                            <Image
                                x:Name="iconPresenter"
                                Width="20"
                                Height="20"
                                Margin="0,0,15,0"
                                Source="{TemplateBinding Tag}"
                                Stretch="Uniform" />
                            <!--  Text Part  -->
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextElement.FontWeight="Bold"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Mouse Over Effect  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource stl_MenuButtonHoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource stl_DefaultForeground_2Brush}" />
            </Trigger>

            <!--  Pressed Effect  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DodgerBlue" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="stl_DefaulSingleIcontButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource stl_DefaultForeground_2Brush}" />
        <Setter Property="Margin" Value="0,0,2,0" />                           
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Padding="5">
                        <!--  Icon Part  -->
                        <Image
                            x:Name="iconPresenter"
                            Width="20"
                            Height="20"
                            Source="{TemplateBinding Tag}"
                            Stretch="Uniform" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Mouse Over Effect  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource stl_ConnectionButtonHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource stl_ConnectionButtonHoverForegroundBrush}" />
            </Trigger>

            <!--  Pressed Effect  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  Connection button style  -->
    <Style
        x:Key="stl_deconnectionButton"
        BasedOn="{StaticResource stl_DefaultButton}"
        TargetType="Button">
        <Style.Triggers>
            <!--  Mouse Over Effect  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource stl_ConnectionButtonHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource stl_ConnectionButtonHoverForegroundBrush}" />
            </Trigger>

            <!--  Pressed Effect  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  Menu Item Button Style  -->
    <Style x:Key="MenuItemButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="15,5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3E3E42" />
                <Setter Property="Foreground" Value="#00ADEF" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>